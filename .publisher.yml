# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
project_name: conta

# Check https://goreleaser.com/customization/hooks/
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
builds:
  - env:
      - CGO_ENABLED=0
    main: ./cmd
    id: mybuild
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64

  - id: libbuild
    skip: true
      
# https://goreleaser.com/customization/archive/
archives:
  - name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    id: mybuild-archive
    builds:
     - mybuild

# https://goreleaser.com/customization/nfpm/
nfpms:
  - id: deb
    license: MPL-2.0
    maintainer: "frain-dev"
    homepage: https://getconvoy.io/
    description: A Cloud native webhook service
    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    formats:
      - deb

  - id: rpm
    license: MPL-2.0
    maintainer: "frain-dev"
    homepage: https://getconvoy.io/
    description: A Cloud native webhook service
    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    formats:
      - rpm

# https://goreleaser.com/customization/homebrew/
brews:
  - name: conta
    homepage: https://getconvoy.io/
    description: A Cloud native webhook service
    license: MPL-2.0
    skip_upload: auto
    commit_author:
      name: dotunj
      email: dotunjolaosho@gmail.com
    tap:
      owner: dotunj
      name: homebrew-tools
    url_template: https://dl.cloudsmith.io/public/convoy/convoy/raw/versions/{{.Version}}/{{.Tag }}/{{ .ArtifactName }}

dockers: 
- image_templates: ["docker.cloudsmith.io/convoy/convoy/dotunj/conta:{{ .Tag }}"]
  goos: linux
  goarch: amd64
  dockerfile: build.Dockerfile
  ids: 
    - mybuild
  build_flag_templates:
  - --platform=linux/amd64
  - --label=org.opencontainers.image.title={{ .ProjectName }}
  - --label=org.opencontainers.image.description=A Cloud native webhook service
  - --label=org.opencontainers.image.url=https://github.com/dotunj/{{ .ProjectName }}
  - --label=org.opencontainers.image.source=https://github.com/dotunj/{{ .ProjectName }}
  - --label=org.opencontainers.image.created={{ time "2006-01-02T15:04:05Z07:00" }}
  - --label=org.opencontainers.image.licenses=MPL-2.0

publishers:
  - name: cloudsmith-raw
    ids: 
    - mybuild-archive
    dir: "{{ dir .ArtifactPath }}"
    cmd: cloudsmith push raw --version={{ .Version }} convoy/convoy {{ .ArtifactName }}
    env: 
     - CLOUDSMITH_API_KEY={{ .Env.CLOUDSMITH_API_KEY }}

  - name: cloudsmith-deb
    ids: 
    - deb
    dir: "{{ dir .ArtifactPath }}"
    cmd: cloudsmith push deb convoy/convoy/any-distro/any-version {{ .ArtifactName }}
    env: 
      - CLOUDSMITH_API_KEY={{ .Env.CLOUDSMITH_API_KEY }}

  - name: cloudsmith-rpm
    ids: 
    - rpm
    dir: "{{ dir .ArtifactPath }}"
    cmd: cloudsmith push rpm convoy/convoy/any-distro/any-version {{ .ArtifactName }}
    env: 
      - CLOUDSMITH_API_KEY={{ .Env.CLOUDSMITH_API_KEY }}
    

checksum:
  name_template: "{{ .ProjectName}}_checksums.txt"

release:
  ids:
    - libbuild

signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
    artifacts: checksum
    output: true

docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    artifacts: images
    output: true
    args: 
      - sign
      - "--force"
      - "${artifact}"
